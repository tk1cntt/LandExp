entity Region {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate

}

entity City {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity District {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Ward {
   name String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

entity Street {
   name String,
   postalCode String,
   stateProvince String,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToMany {
   Region{user(login)} to User
}

relationship OneToMany {
   City{districts} to District,
   Region{districts} to District,
   District{wards} to Ward,
   Ward{streets} to Street
}

enum UserActionType {
   FOR_BUY, FOR_SELL, FOR_RENT, FOR_HIRE
}

enum StatusType {
   PENDING, PAID, APPROVED, CANCELED, EXPIRED, SOLD
}

enum LandType {
   APARTMENT, PEN_HOUSE, HOME, HOME_VILLA, HOME_STREET_SIDE, MOTEL_ROOM, OFFICE, LAND_SCAPE, LAND_OF_PROJECT, LAND_FARM, LAND_RESORT, WAREHOUSES, KIOSKS, OTHER
}

enum DirectionType {
   NORTH, SOUTH, EAST, WEST, EAST_NORTH, WEST_NORTH, EAST_SOUTH, WEST_SOUTH
}

enum AcreageType {
   M2, HECTARE
}

enum SaleType {
   SALE_BY_MYSELF, SALE_BY_MYSELF_VIP, SALE_SUPPORT, SALE_SUPPORT_VIP
}

enum MoneyType {
   MILLION, BILLION
}

enum PresentType {
   NONE, BASIC_FURNITURE, FULL_FURNITURE, DISCOUNT_PRICE, SUPPORT_EXHIBIT, SUPPORT_FEE, HAVE_PRESENT
}

entity House {
   avatar ImageBlob,
   actionType UserActionType,
   address String,
   money Float,
   acreage Float,
   acreageStreetSide Float,
   discount Float,
   direction DirectionType,
   directionBalcony DirectionType,
   floor String,
   numberOfFloor Float,
   bathRoom Integer,
   bedRoom Integer,
   parking Boolean,
   summary String,
   landType LandType,
   saleType SaleType,
   fee Float,
   feeMax Float,
   present PresentType,
   hits Integer,
   customer String,
   mobile String,
   email String,
   facebook String,
   zalo String,
   statusType StatusType,
   googleId String,
   latitude Float,
   longitude Float,
   createAt LocalDate,
   updateAt LocalDate
}

entity ServiceFee {
   saleType SaleType,
   fee Float
}

relationship ManyToOne {
   House{city(name)} to City,
   House{district(name)} to District,
   House{ward(name)} to Ward,
   House{street(name)} to Street,
   House{project(name)} to LandProject,
   House{createBy(login)} to User,
   House{updateBy(login)} to User
}

entity HouseTracking {
   activityType UserActivityType,
   sourceId String,
   sourceLink String,
   description String,
   createAt LocalDate
}

relationship ManyToOne {
   HouseTracking{house} to House,
   HouseTracking{user(login)} to User
}

entity HousePhoto {
   image ImageBlob,
   enabled Boolean,
   createAt LocalDate
}

relationship ManyToOne {
   HousePhoto{createBy(login)} to User,
   HousePhoto{updateBy(login)} to User
}

relationship OneToMany {
   House{photos} to HousePhoto
}

entity LandProject {
   name String,
   image ImageBlob
}

entity LandProjectPhoto {
   image ImageBlob,
   createAt LocalDate
}

relationship ManyToOne {
   LandProjectPhoto{createBy(login)} to User,
   LandProjectPhoto{updateBy(login)} to User
}

relationship OneToMany {
   LandProject{photos} to LandProjectPhoto
}

relationship ManyToOne {
   LandProject{city(name)} to City,
   LandProject{district(name)} to District,
   LandProject{street(name)} to Street,
   LandProject{createBy(login)} to User,
   LandProject{updateBy(login)} to User
}

entity Article {
   avatar ImageBlob,
   title String,
   titleAlias String,
   summary String,
   content String,
   statusType StatusType,
   hits Integer,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   Article{category(name)} to Category,
   Article{createBy(login)} to User,
   Article{updateBy(login)} to User
}

entity Category {
   name String,
   nameAlias String,
   createAt LocalDate,
   updateAt LocalDate
}

entity UserProfile {
   name String,
   phoneNumber String
}

relationship ManyToOne {
   UserProfile{user(email)} to User
}

enum UserActivityType {
   USER_SEARCH_BUY, USER_SEARCH_RENT, USER_VIEW_NEWS, USER_LIKE_NEWS, USER_CREATE_NEWS, USER_UPDATE_NEWS, USER_SUBSCRIPTION, USER_UNSUBSCRIPTION, USER_REGISTERED_CONSULTING, USER_UPDATE_SALE_TYPE, USER_PAID_NEWS, USER_SOLD_HOUSE, USER_BOUGTH_HOUSE, USER_CREATE_BANNER, USER_UPDATE_BANNER
}

entity UserSubscription {
   actionType UserActivityType,
   keyword String,
   costFrom Float,
   costTo Float,
   acreageFrom Float,
   acreageTo Float,
   direction DirectionType,
   floor String,
   bathRoom Integer,
   bedRoom Integer,
   parking Boolean,
   landType LandType,
   enabled Boolean,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   UserSubscription{user(login)} to User
   UserSubscription{city(name)} to City,
   UserSubscription{district(name)} to District,
   UserSubscription{street(name)} to Street
}

entity UserTracking {
   activityType UserActivityType,
   sourceId String,
   sourceLink String,
   description String,
   createAt LocalDate
}

relationship ManyToOne {
   UserTracking{user(login} to User
}

entity UserFeed {
   body String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   UserFeed{user(login} to User
}

entity SearchTracking {
   actionType UserActivityType,
   keyword String,
   costFrom Float,
   costTo Float,
   acreageFrom Float,
   acreageTo Float,
   direction DirectionType,
   floor String,
   bathRoom Integer,
   bedRoom Integer,
   parking Boolean,
   landType LandType,
   createAt LocalDate
}

relationship ManyToOne {
   SearchTracking{user(login)} to User
   SearchTracking{city(name)} to City,
   SearchTracking{district(name)} to District,
   SearchTracking{street(name)} to Street
}

entity UserFinancial {
   housePrice Float,
   houseAcreage Float,
   loanRate Float,
   loanFromPeople Float,
   customerMoneyHave Float,
   customerMobile String,
   customerEmail String
}

relationship ManyToOne {
   UserFinancial{user(login)} to User
}

enum CustomerLevel {
   NORMAL, SILVER, GOLD, PLATINUM
}

entity PotentialCustomer {
   level CustomerLevel,
   description String,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   PotentialCustomer{customer(login)} to User,
   PotentialCustomer{createBy(login)} to User,
   PotentialCustomer{updateBy(login)} to User
}

entity Banner {
   title String,
   titleAlias String,
   area Integer,
   hits Integer,
   publicUp LocalDate,
   publicDown LocalDate,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   Banner{createBy(login)} to User,
   Banner{updateBy(login)} to User
}

enum PaymentType {
   CASH, BANK_TRANSFER, ONLINE
}

enum PaymentStatusType {
   OPEN, PENDING, SUCCESS, FAILED
}

entity Payment {
   code String,
   money Float,
   paidTime LocalDate,
   paymentStatus PaymentStatusType,
   createAt LocalDate,
   updateAt LocalDate
}

relationship ManyToOne {
   Payment{house} to House,
   Payment{customer(login)} to User,
   Payment{createBy(login)} to User,
   Payment{updateBy(login)} to User
}

// Set pagination options
paginate Region, District, Street, House, HouseTracking, HousePhoto with pagination

paginate LandProject, Article, Category, SearchTracking, Banner with pagination

paginate UserProfile, UserSubscription, UserTracking, UserFeed, UserFinancial, PotentialCustomer, Payment with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceClass

filter House, UserSubscription, UserTracking, SearchTracking, HouseTracking, Payment, UserFinancial, PotentialCustomer
